<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BankingWebApi</name>
    </assembly>
    <members>
        <member name="T:BankingWebApi.Controllers.AccountsController">
            <summary>
            Controller for web api endpoints.
            </summary>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.#ctor(BankingWebApi.Clients.CurrencyClient,Microsoft.Extensions.Configuration.IConfiguration,BankingWebApi.Interfaces.IAccountRepository)">
            <summary>
            Accounts controller where context is a list of accounts and errors handls errors.
            </summary>
            <param name="currencyClient">Dependency injection for currency client for API calls.</param>
            <param name="configuration">Dependency injection for appsettings.json to get API key.</param>
            <param name="accountRepository">Dependency injection for account repository.</param>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.GetAccounts">
            <summary>
            Gets all accounts.
            </summary>
            <returns>
            List of all accounts or empty list if no accounts found.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.GetAccount(System.Guid)">
            <summary>
            Gets account by id.
            </summary>
            <param name="id">GUID of account you want to view.</param>
            <returns>
            Account if found or 404 if not found.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.GetCurrencyConversion(System.Guid,System.String)">
            <summary>
            Gets currency converison.
            </summary>
            <param name="id">GUID of account you want to view.</param>
            <param name="currency">Enter currency abbreviations you want to convert to from USD separated by a comma.</param>
            <returns>
            Returns USD exchanged to user desired currency.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.ChangeName(System.Guid,System.String)">
            <summary>
            Changes name property of account.
            </summary>
            <param name="id">GUID of account you want to apply name change to.</param>
            <param name="name">Name(string) you want to change to for account.</param>
            <returns>
            204 if account name successfully changes or 404 if account not found.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.Deposit(System.Guid,System.Decimal)">
            <summary>
            Deposits money into an account balance.
            </summary>
            <param name="id">GUID of account you want to apply deposit to.</param>
            <param name="amount">Decimal amount of money you want to add to acount.</param>
            <returns>
            204 status code if successful, 404 if account not found.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.Withdraw(System.Guid,System.Decimal)">
            <summary>
            Withdraws money from account balance.
            </summary>
            <param name="id">GUID of account you want to apply withdrawal to.</param>
            <param name="amount">Decimal amount of money you want to withdraw from account.</param>
            <returns>
            204 status code if successful, 404 if account not found, or 400 if account balance is less than withdrawal amount.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.Transfer(BankingWebApi.Models.AccountTransfer)">
            <summary>
            Transfers a provided amount from one user's account to another users's account.
            </summary>
            <param name="accountTransfer">
            Account transfer model, contains properties of:
            TransferFromId: GUID (account you want to transfer from)
            TransferToId: GUID (account you want to transfer to)
            Amount: Decimal amount of money you want to transfer.
            </param>
            <returns>
            Returns 204 if successful, 400 if any account does not exist OR if account transfer amount is more than what exists from withdrawal account.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.PostAccount(BankingWebApi.Models.AccountCreate)">
            <summary>
            Creates an account.
            </summary>
            <param name="accountCreate">
            Model for creating account, contains:
            Name: Name(string) of account holder.
            Balance: Decimal amount of initial deposit of money.
            </param>
            <returns>
            If successful, returns account object.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.ReactivateAccount(System.Guid)">
            <summary>
            Reactivates a deactivated account.
            </summary>
            <param name="id">GUID of account you want to reactivate.</param>
            <returns>
            204 if successful, 400 if account is not found.
            </returns>
        </member>
        <member name="M:BankingWebApi.Controllers.AccountsController.DeleteAccount(System.Guid)">
            <summary>
            Soft deletes an account.
            </summary>
            <param name="id">GUID of account you want to deactivate</param>
            <returns>
            204 if successful, 400 if account is already active or if account balance is still greater than 0.
            </returns>
        </member>
        <member name="T:BankingWebApi.Models.AccountCreate">
            <summary>
            Shape of model for creating account endpoint.
            </summary>
        </member>
        <member name="T:BankingWebApi.Models.AccountsContext">
            <summary>
            Stores accounts locally.
            </summary>
        </member>
        <member name="T:BankingWebApi.Models.AccountTransfer">
            <summary>
            Shape of object for transferring money between accounts endpoint.
            </summary>
        </member>
    </members>
</doc>
